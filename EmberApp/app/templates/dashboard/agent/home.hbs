{{agent-left-menu}}
<div class="right-section">
    <section class="dashboard-home">
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="home-card">
                    <h4>{{trans 'dashboard.labels.new-customers'}}</h4>

                    <p class="counter">
                        <span class="timer count-title" id="count-number" data-to="1256" data-speed="1500"></span>
                        <span class="title">$ {{trans 'dashboard.labels.today'}}</span>
                    </p>
                    <p class="counter">
                        <span class="title">{{trans 'dashboard.labels.this-month'}}:</span>
                        <span class="timer count-title" id="count-number" data-to="4789" data-speed="1500"></span>$
                    </p>
                    <p class="counter">
                        <span class="title">{{trans 'dashboard.labels.total'}}:</span>
                        <span class="timer count-title" id="count-number" data-to="876567" data-speed="1000"></span>$
                    </p>
                    <i class="fa fa-user" aria-hidden="true"></i>
                </div>
            </div>


            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="home-card">
                    <h4>{{trans 'dashboard.labels.new-agents'}}</h4>
                    <p class="counter">
                        <span class="timer count-title" id="count-number" data-to="1256" data-speed="1500"></span>
                        <span class="title">$ {{trans 'dashboard.labels.today'}}</span>
                    </p>
                    <p class="counter">
                        <span class="title">{{trans 'dashboard.labels.this-month'}}:</span>
                        <span class="timer count-title" id="count-number" data-to="4789" data-speed="1500"></span>$
                    </p>
                    <p class="counter">
                        <span class="title">{{trans 'dashboard.labels.total'}}:</span>
                        <span class="timer count-title" id="count-number" data-to="876567" data-speed="1000"></span>$
                    </p>
                    <i class="fa fa-black-tie" aria-hidden="true"></i>
                </div>
            </div>

            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="home-card">
                    <h4>{{trans 'dashboard.labels.new-orders'}}</h4>
                    <p class="counter">
                        <span class="timer count-title" id="count-number" data-to="1256" data-speed="1500"></span>
                        <span class="title">$ {{trans 'dashboard.labels.today'}}</span>
                    </p>
                    <p class="counter">
                        <span class="title">{{trans 'dashboard.labels.this-month'}}:</span>
                        <span class="timer count-title" id="count-number" data-to="4789" data-speed="1500"></span>$
                    </p>
                    <p class="counter">
                        <span class="title">{{trans 'dashboard.labels.total'}}:</span>
                        <span class="timer count-title" id="count-number" data-to="876567" data-speed="1000"></span>$
                    </p>
                    <i class="fa fa-black-tie" aria-hidden="true"></i>
                </div>
            </div>

            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="home-card">
                    <h4>{{trans 'dashboard.labels.new-commissions'}}</h4>
                    <p class="counter">
                        <span class="timer count-title" id="count-number" data-to="1256" data-speed="1500"></span>
                        <span class="title">$ {{trans 'dashboard.labels.today'}}</span>
                    </p>
                    <p class="counter">
                        <span class="title">{{trans 'dashboard.labels.this-month'}}:</span>
                        <span class="timer count-title" id="count-number" data-to="4789" data-speed="1500"></span>$
                    </p>
                    <p class="counter">
                        <span class="title">{{trans 'dashboard.labels.total'}}:</span>
                        <span class="timer count-title" id="count-number" data-to="876567" data-speed="1000"></span>$
                    </p>
                    <i class="fa fa-usd" aria-hidden="true"></i>
                </div>
            </div>
        </div>
        <script>
            (function ($) {
                $.fn.countTo = function (options) {
                    options = options || {};

                    return $(this).each(function () {
                        // set options for current element
                        var settings = $.extend({}, $.fn.countTo.defaults, {
                            from:            $(this).data('from'),
                            to:              $(this).data('to'),
                            speed:           $(this).data('speed'),
                            refreshInterval: $(this).data('refresh-interval'),
                            decimals:        $(this).data('decimals')
                        }, options);

                        // how many times to update the value, and how much to increment the value on each update
                        var loops = Math.ceil(settings.speed / settings.refreshInterval),
                                increment = (settings.to - settings.from) / loops;

                        // references & variables that will change with each update
                        var self = this,
                                $self = $(this),
                                loopCount = 0,
                                value = settings.from,
                                data = $self.data('countTo') || {};

                        $self.data('countTo', data);

                        // if an existing interval can be found, clear it first
                        if (data.interval) {
                            clearInterval(data.interval);
                        }
                        data.interval = setInterval(updateTimer, settings.refreshInterval);

                        // initialize the element with the starting value
                        render(value);

                        function updateTimer() {
                            value += increment;
                            loopCount++;

                            render(value);

                            if (typeof(settings.onUpdate) == 'function') {
                                settings.onUpdate.call(self, value);
                            }

                            if (loopCount >= loops) {
                                // remove the interval
                                $self.removeData('countTo');
                                clearInterval(data.interval);
                                value = settings.to;

                                if (typeof(settings.onComplete) == 'function') {
                                    settings.onComplete.call(self, value);
                                }
                            }
                        }

                        function render(value) {
                            var formattedValue = settings.formatter.call(self, value, settings);
                            $self.html(formattedValue);
                        }
                    });
                };

                $.fn.countTo.defaults = {
                    from: 0,               // the number the element should start at
                    to: 0,                 // the number the element should end at
                    speed: 1000,           // how long it should take to count between the target numbers
                    refreshInterval: 100,  // how often the element should be updated
                    decimals: 0,           // the number of decimal places to show
                    formatter: formatter,  // handler for formatting the value before rendering
                    onUpdate: null,        // callback method for every time the element is updated
                    onComplete: null       // callback method for when the element finishes updating
                };

                function formatter(value, settings) {
                    return value.toFixed(settings.decimals);
                }
            }(jQuery));

            jQuery(function ($) {
                // custom formatting example
                $('#count-number').data('countToOptions', {
                    formatter: function (value, options) {
                        return value.toFixed(options.decimals).replace(/\B(?=(?:\d{3})+(?!\d))/g, ',');
                    }
                });

                // start all the timers
                $('.timer').each(count);

                function count(options) {
                    var $this = $(this);
                    options = $.extend({}, options || {}, $this.data('countToOptions') || {});
                    $this.countTo(options);
                }
            });

        </script>

        <div class="row">
            {{ dashboard/orders-preview-component
                    viewLink = "dashboard.agent.agent-reports.purchase-details"
                    viewAllLink = "dashboard.agent.agent-reports.customer-orders"
                    getOrders = (action 'getLatestOrders')
            }}

            <div class="col-md-3 col-sm-12 dark-cards">
                <div class="home-card-secondary">
                    {{fa-icon "user icon-bg"}}
                    <div class="img-holder">
                        {{fa-icon 'user'}}
                    </div>
                    <div class="right-card">
                        <h4 class="number">25</h4>
                        <span>users regsitered today</span>
                    </div>
                </div>
                <div class="home-card-secondary">
                    {{fa-icon 'users icon-bg'}}
                    <div class="img-holder">
                        {{fa-icon 'users'}}
                    </div>
                    <div class="right-card">
                        <h4 class="number">2,556</h4>
                        <span>users total</span>
                    </div>
                </div>
                <div class="home-card-secondary">
                    {{fa-icon 'envelope icon-bg'}}
                    <div class="img-holder">
                        {{fa-icon 'envelope'}}
                    </div>
                    <div class="right-card">
                        <h4 class="number">3</h4>
                        <span>new messages</span>
                    </div>
                </div>
            </div>
        </div>

        {{chart-component}}
        <div id="bubbles" style="position: relative; width: 100%; height: 600px;"></div>

        <script>
            var bubble_map = new Datamap({
                element: document.getElementById("bubbles"),
                geographyConfig: {
                    popupOnHover: false,
                    highlightOnHover: true
                },
                fills: {
                    defaultFill: '#ABDDA4',
                    USA: 'blue',
                    RUS: 'red'
                }
            });
            bubble_map.bubbles([
                {
                    name: 'Not a bomb, but centered on Brazil',
                    radius: 23,
                    centered: 'BRA',
                    country: 'USA',
                    yeild: 0,
                    fillKey: 'USA',
                    date: '1954-03-01'
                },
                {
                    name: 'Not a bomb',
                    radius: 15,
                    yeild: 0,
                    country: 'USA',
                    centered: 'USA',
                    date: '1986-06-05',
                    significance: 'Centered on US',
                    fillKey: 'USA'
                },
                {
                    name: 'Castle Bravo',
                    radius: 25,
                    yeild: 15000,
                    country: 'USA',
                    significance: 'First dry fusion fuel "staged" thermonuclear weapon; a serious nuclear fallout accident occurred',
                    fillKey: 'USA',
                    date: '1954-03-01',
                    latitude: 11.415,
                    longitude: 165.1619
                },{
                    name: 'Tsar Bomba',
                    radius: 70,
                    yeild: 50000,
                    country: 'USSR',
                    fillKey: 'RUS',
                    significance: 'Largest thermonuclear weapon ever tested—scaled down from its initial 100 Mt design by 50%',
                    date: '1961-10-31',
                    latitude: 73.482,
                    longitude: 54.5854
                }
            ], {
                popupTemplate: function(geo, data) {

                }
            });
        </script>
    </section>
</div>